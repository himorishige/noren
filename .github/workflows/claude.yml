name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      github.actor == 'himorishige' && (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
        (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
      )
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"

          # Optional: Allow Claude to run specific commands
          # allowed_tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"

          # Optional: Add custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            - すべて日本語で、簡潔に。結論→根拠→提案の順で述べること。
            - このリポジトリの前提に従うこと（Web標準APIのみ: WHATWG Streams/WebCrypto/fetch、TypeScript strict、モノレポ: pnpm）。
            - レビュー観点:
              1) PII検出の誤検出/漏れ（文脈ゲート hasCtx の使い方、正規表現の境界、Luhn/IPv6圧縮対応など）
              2) セキュリティ（HMAC鍵の扱い、トークン長、ポリシー上書きのリスク）
              3) パフォーマンス（ストリーミング処理、正規化/正規表現、アルゴリズム計算量）
              4) 型安全性（any禁止、戻り値/引数の型、unsafe cast有無）
              5) テスト容易性（pure function化、最小ユニットテストの不足箇所）
            - 具体的な修正提案は、ファイルパスを backtick で明示し、短いパッチ例か擬似コードで示すこと（例: `packages/noren-core/src/index.ts`）。
            - 憶測は避け、該当箇所を引用して根拠を示すこと。不要な依存追加は提案しない（Dependency Minimalism）。
            - 出力フォーマットは箇条書き中心で、実行可能なチェックリスト/次アクションを最後に付けること。

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
